upstream pubsub_emulator {
    server ${PUBSUB_EMULATOR_URL};
}

upstream storage_emulator {
    server ${STORAGE_EMULATOR_URL};
}

upstream firestore_emulator {
    server ${FIRESTORE_EMULATOR_URL};
}

upstream datastore_emulator {
    server ${DATASTORE_EMULATOR_URL};
}

upstream fileserver_emulator {
    server ${DATASTORE_FILE_SERVER_URL};
}

server {
    listen 80;
    server_name localhost;
    server_tokens off;

    root /usr/share/nginx/html;
    index index.html;

    client_max_body_size 100M;  # Allow larger file uploads (100MB)
    

    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    location /fs/ {
        proxy_pass http://fileserver_emulator/fs/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Ensure query parameters are passed
        proxy_pass_request_headers on;

        # Increase timeouts for large downloads
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;

        # Disable buffering for downloads
        proxy_buffering off;
        proxy_request_buffering off;

        add_header Access-Control-Allow-Origin "*" always;
    }

    location ~ ^/(pubsub|storage|firestore|datastore)/(.*)$ {
        set $emulator_service $1;

        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
            add_header Access-Control-Max-Age 3600;
            add_header Content-Type "text/plain charset=UTF-8";
            add_header Content-Length 0;
            return 204;
        }

        proxy_pass http://${emulator_service}_emulator/$2$is_args$args;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 300s;

        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
        add_header Access-Control-Max-Age 3600 always;
    }

    location = /config.json {
        try_files /config.json =404;
        add_header Content-Type application/json;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    location / {
        try_files $uri $uri/ /index.html;

        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    location ~ ^/_(pubsub|storage|firestore|datastore)-hc/(.*)$ {
        proxy_pass http://$1_emulator/$2$is_args$args;
    }

    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
